{"version":3,"file":"executeValidation.js","sources":["../../../src/utils/executeValidation.ts"],"sourcesContent":["import type { Obj, ValidationFunction, RecursivePartial } from '../types';\nimport { _mergeWith } from './mergeWith';\nimport { _isPlainObject } from './isPlainObject';\n\ntype ErrorField = Obj | string[] | Obj[] | string;\n\nfunction executeCustomizer(objValue?: ErrorField, srcValue?: ErrorField) {\n  if (_isPlainObject(objValue) || _isPlainObject(srcValue)) return;\n  if (objValue === null || objValue === '') return srcValue;\n  if (srcValue === null || srcValue === '') return objValue;\n  if (!srcValue) return objValue;\n  if (!objValue || !srcValue) return;\n  if (Array.isArray(objValue)) {\n    if (!Array.isArray(srcValue)) return [...objValue, srcValue];\n    const newErrors: any[] = [];\n    const errLength = Math.max(srcValue.length, objValue.length);\n    for (let i = 0; i < errLength; i++) {\n      let obj: any = objValue[i];\n      let src: any = srcValue[i];\n      if (!_isPlainObject(obj) && !_isPlainObject(src)) {\n        if (!Array.isArray(obj)) obj = [obj];\n        if (!Array.isArray(src)) src = [src];\n        newErrors.push(...obj, ...src);\n      } else {\n        newErrors.push(mergeErrors([obj ?? {}, src ?? {}] as any));\n      }\n    }\n    return newErrors.filter(Boolean);\n  }\n  if (!Array.isArray(srcValue)) srcValue = [srcValue];\n  return [objValue, ...srcValue]\n    .reduce((acc, value) => acc.concat(value as string), [] as string[])\n    .filter(Boolean);\n}\n\nexport function mergeErrors<Data extends Obj>(\n  errors: (RecursivePartial<Data> | undefined)[]\n) {\n  const merged = _mergeWith<Data>(...errors, executeCustomizer);\n  return merged;\n}\n\nexport function runValidations<Data extends Obj>(\n  values: Data,\n  validationOrValidations?:\n    | ValidationFunction<Data>[]\n    | ValidationFunction<Data>\n): ReturnType<ValidationFunction<Data>>[] {\n  if (!validationOrValidations) return [];\n  const validations = Array.isArray(validationOrValidations)\n    ? validationOrValidations\n    : [validationOrValidations];\n\n  return validations.map((v) => v(values));\n}\n"],"names":[],"mappings":";;;AAMA,SAAS,iBAAiB,CAAC,QAAqB,EAAE,QAAqB;IACrE,IAAI,cAAc,CAAC,QAAQ,CAAC,IAAI,cAAc,CAAC,QAAQ,CAAC;QAAE,OAAO;IACjE,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,EAAE;QAAE,OAAO,QAAQ,CAAC;IAC1D,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,EAAE;QAAE,OAAO,QAAQ,CAAC;IAC1D,IAAI,CAAC,QAAQ;QAAE,OAAO,QAAQ,CAAC;IAC/B,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ;QAAE,OAAO;IACnC,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;QAC3B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;YAAE,OAAO,CAAC,GAAG,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAC7D,MAAM,SAAS,GAAU,EAAE,CAAC;QAC5B,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC7D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;YAClC,IAAI,GAAG,GAAQ,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAI,GAAG,GAAQ,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;gBAChD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC;oBAAE,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;gBACrC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC;oBAAE,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;gBACrC,SAAS,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;aAChC;iBAAM;gBACL,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,aAAH,GAAG,cAAH,GAAG,GAAI,EAAE,EAAE,GAAG,aAAH,GAAG,cAAH,GAAG,GAAI,EAAE,CAAQ,CAAC,CAAC,CAAC;aAC5D;SACF;QACD,OAAO,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KAClC;IACD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;QAAE,QAAQ,GAAG,CAAC,QAAQ,CAAC,CAAC;IACpD,OAAO,CAAC,QAAQ,EAAE,GAAG,QAAQ,CAAC;SAC3B,MAAM,CAAC,CAAC,GAAG,EAAE,KAAK,KAAK,GAAG,CAAC,MAAM,CAAC,KAAe,CAAC,EAAE,EAAc,CAAC;SACnE,MAAM,CAAC,OAAO,CAAC,CAAC;AACrB,CAAC;SAEe,WAAW,CACzB,MAA8C;IAE9C,MAAM,MAAM,GAAG,UAAU,CAAO,GAAG,MAAM,EAAE,iBAAiB,CAAC,CAAC;IAC9D,OAAO,MAAM,CAAC;AAChB,CAAC;SAEe,cAAc,CAC5B,MAAY,EACZ,uBAE4B;IAE5B,IAAI,CAAC,uBAAuB;QAAE,OAAO,EAAE,CAAC;IACxC,MAAM,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC,uBAAuB,CAAC;UACtD,uBAAuB;UACvB,CAAC,uBAAuB,CAAC,CAAC;IAE9B,OAAO,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AAC3C;;;;"}