{"version":3,"file":"domUtils.js","sources":["../../../src/utils/domUtils.ts"],"sourcesContent":["import type { FormControl, Obj, FieldValue, Touched } from '../types';\nimport {\n  isFormControl,\n  isFieldSetElement,\n  isInputElement,\n  isSelectElement,\n} from './typeGuards';\nimport { _get } from './get';\nimport { _set } from './set';\nimport { _update } from './update';\nimport { getPath } from './getPath';\n\n/**\n * @ignore\n */\nexport function getFormControls(el: Element): FormControl[] {\n  if (isFormControl(el)) return [el];\n  if (el.childElementCount === 0) return [];\n  const foundControls: Set<FormControl> = new Set();\n  for (const child of el.children) {\n    if (isFormControl(child)) foundControls.add(child);\n    if (isFieldSetElement(child)) {\n      for (const fieldsetChild of child.elements) {\n        if (isFormControl(fieldsetChild)) foundControls.add(fieldsetChild);\n      }\n    }\n    if (child.childElementCount > 0)\n      getFormControls(child).forEach((value) => foundControls.add(value));\n  }\n  return Array.from(foundControls);\n}\n\n/**\n * @ignore\n */\nexport function addAttrsFromFieldset(fieldSet: HTMLFieldSetElement): void {\n  for (const element of fieldSet.elements) {\n    if (!isFormControl(element) && !isFieldSetElement(element)) continue;\n    if (\n      fieldSet.hasAttribute('data-felte-keep-on-remove') &&\n      !element.hasAttribute('data-felte-keep-on-remove')\n    ) {\n      element.dataset.felteKeepOnRemove = fieldSet.dataset.felteKeepOnRemove;\n    }\n  }\n}\n\n/** @ignore */\nexport function getInputTextOrNumber(\n  el: FormControl\n): string | number | undefined {\n  if (el.type.match(/^(number|range)$/)) {\n    return !el.value ? undefined : +el.value;\n  } else {\n    return el.value;\n  }\n}\n\n/**\n * @ignore\n */\nexport function getFormDefaultValues<Data extends Obj>(\n  node: HTMLFormElement\n): { defaultData: Data; defaultTouched: Touched<Data> } {\n  let defaultData = {} as Data;\n  let defaultTouched = {} as Touched<Data>;\n  for (const el of node.elements) {\n    if (isFieldSetElement(el)) addAttrsFromFieldset(el);\n    if (!isFormControl(el) || !el.name) continue;\n    const elName = getPath(el);\n    if (isInputElement(el)) {\n      if (el.type === 'checkbox') {\n        if (typeof _get(defaultData, elName) === 'undefined') {\n          const checkboxes = Array.from(\n            node.querySelectorAll(`[name=\"${el.name}\"]`)\n          ).filter((checkbox) => {\n            if (!isFormControl(checkbox)) return false;\n            return elName === getPath(checkbox);\n          });\n          if (checkboxes.length === 1) {\n            defaultData = _set(defaultData, elName, el.checked);\n            defaultTouched = _set(defaultTouched, elName, false);\n            continue;\n          }\n          defaultData = _set(defaultData, elName, el.checked ? [el.value] : []);\n          defaultTouched = _set(defaultTouched, elName, false);\n          continue;\n        }\n        if (Array.isArray(_get(defaultData, elName)) && el.checked) {\n          defaultData = _update<Data>(defaultData, elName, (value) => [\n            ...value,\n            el.value,\n          ]);\n        }\n        continue;\n      }\n      if (el.type === 'radio') {\n        if (_get(defaultData, elName)) continue;\n        defaultData = _set(\n          defaultData,\n          elName,\n          el.checked ? el.value : undefined\n        );\n        defaultTouched = _set(defaultTouched, elName, false);\n        continue;\n      }\n      if (el.type === 'file') {\n        defaultData = _set(\n          defaultData,\n          elName,\n          el.multiple ? Array.from(el.files || []) : el.files?.[0]\n        );\n        defaultTouched = _set(defaultTouched, elName, false);\n        continue;\n      }\n    } else if (isSelectElement(el)) {\n      const multiple = el.multiple;\n      if (!multiple) {\n        defaultData = _set(defaultData, elName, el.value);\n      } else {\n        const selectedOptions = Array.from(el.options)\n          .filter((opt) => opt.selected)\n          .map((opt) => opt.value);\n        defaultData = _set(defaultData, elName, selectedOptions);\n      }\n      defaultTouched = _set(defaultTouched, elName, false);\n      continue;\n    }\n    const inputValue = getInputTextOrNumber(el);\n    defaultData = _set(defaultData, elName, inputValue);\n    defaultTouched = _set(defaultTouched, elName, false);\n  }\n  return { defaultData, defaultTouched };\n}\n\nexport function setControlValue(\n  el: FormControl,\n  value: FieldValue | FieldValue[]\n): void {\n  if (!isFormControl(el)) return;\n  const fieldValue = value;\n\n  if (isInputElement(el)) {\n    if (el.type === 'checkbox') {\n      const checkboxesDefaultData = fieldValue;\n      if (\n        typeof checkboxesDefaultData === 'undefined' ||\n        typeof checkboxesDefaultData === 'boolean'\n      ) {\n        el.checked = !!checkboxesDefaultData;\n        return;\n      }\n      if (Array.isArray(checkboxesDefaultData)) {\n        if ((checkboxesDefaultData as string[]).includes(el.value)) {\n          el.checked = true;\n        } else {\n          el.checked = false;\n        }\n      }\n      return;\n    }\n    if (el.type === 'radio') {\n      const radioValue = fieldValue;\n      if (el.value === radioValue) el.checked = true;\n      else el.checked = false;\n      return;\n    }\n    if (el.type === 'file') {\n      el.files = null;\n      el.value = '';\n      return;\n    }\n  } else if (isSelectElement(el)) {\n    const multiple = el.multiple;\n    if (!multiple) {\n      el.value = String(fieldValue ?? '');\n      for (const option of el.options) {\n        if (option.value === fieldValue) {\n          option.selected = true;\n        } else {\n          option.selected = false;\n        }\n      }\n    } else if (Array.isArray(fieldValue)) {\n      el.value = String(fieldValue[0] ?? '');\n      for (const option of el.options) {\n        if ((fieldValue as string[]).includes(option.value)) {\n          option.selected = true;\n        } else {\n          option.selected = false;\n        }\n      }\n    }\n    return;\n  }\n\n  el.value = String(fieldValue ?? '');\n}\n\n/** Sets the form inputs value to match the data object provided. */\nexport function setForm<Data extends Obj>(\n  node: HTMLFormElement,\n  data: Data\n): void {\n  for (const el of node.elements) {\n    if (isFieldSetElement(el)) addAttrsFromFieldset(el);\n    if (!isFormControl(el) || !el.name) continue;\n    const elName = getPath(el);\n    setControlValue(el, _get(data, elName));\n  }\n}\n"],"names":[],"mappings":"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"}