{"version":3,"file":"create-field.js","sources":["../../src/create-field.ts"],"sourcesContent":["import type { FieldValue, FormControl } from '@felte/common';\nimport { isFormControl, setControlValue, isElement } from '@felte/common';\n\nexport type FieldConfig = {\n  name: string;\n  touchOnChange?: boolean;\n  defaultValue?: FieldValue;\n  onFormReset?(e: ResetEvent): void;\n};\n\nexport type Field = {\n  field(node: HTMLElement): { destroy?(): void };\n  onInput(value: FieldValue): void;\n  onChange(value: FieldValue): void;\n  onBlur(): void;\n};\n\ntype EventType = 'input' | 'change' | 'focusout';\n\ntype ResetEvent = Event & { target: HTMLFormElement };\n\nconst observerConfig = {\n  attributes: true,\n  attributeFilter: ['data-felte-validation-message', 'aria-invalid'],\n};\n\nexport function createField(\n  name: string,\n  config?: Omit<FieldConfig, 'name'>\n): Field;\nexport function createField(config: FieldConfig): Field;\nexport function createField(\n  nameOrConfig: FieldConfig | string,\n  config?: Omit<FieldConfig, 'name'>\n): Field;\nexport function createField(\n  nameOrConfig: FieldConfig | string,\n  config?: Omit<FieldConfig, 'name'>\n): Field {\n  let name: string;\n  let defaultValue: FieldValue;\n  let touchOnChange: boolean;\n  let fieldNode: HTMLElement;\n  let control: FormControl;\n  let onFormReset: ((e: ResetEvent) => void) | undefined;\n\n  if (typeof nameOrConfig === 'string') {\n    name = nameOrConfig;\n    defaultValue = config?.defaultValue;\n    touchOnChange = config?.touchOnChange ?? false;\n    onFormReset = config?.onFormReset;\n  } else {\n    name = nameOrConfig.name;\n    defaultValue = nameOrConfig.defaultValue;\n    touchOnChange = nameOrConfig.touchOnChange ?? false;\n    onFormReset = nameOrConfig?.onFormReset;\n  }\n\n  function dispatchEvent(eventType: 'focusout'): void;\n  function dispatchEvent(\n    eventType: 'input' | 'change',\n    value: FieldValue\n  ): void;\n  function dispatchEvent(eventType: EventType, value?: FieldValue): void {\n    if (!control) return;\n    setControlValue(control, value);\n    const customEvent = new Event(eventType, {\n      bubbles: true,\n      composed: true,\n    });\n    control.dispatchEvent(customEvent);\n  }\n\n  function mutationCallback(mutationList: MutationRecord[]) {\n    mutationList.forEach(() => {\n      const invalid = control.getAttribute('aria-invalid');\n      if (!invalid) fieldNode.removeAttribute('aria-invalid');\n      else fieldNode.setAttribute('aria-invalid', invalid);\n      const validationMessage = control.getAttribute(\n        'data-felte-validation-message'\n      );\n      if (!validationMessage)\n        fieldNode.removeAttribute('data-felte-validation-message');\n      else\n        fieldNode.setAttribute(\n          'data-felte-validation-message',\n          validationMessage\n        );\n    });\n  }\n\n  function handleReset(e: Event) {\n    if (!onFormReset) return;\n    setControlValue(control, defaultValue);\n    onFormReset(e as ResetEvent);\n  }\n\n  function field(node: HTMLElement) {\n    fieldNode = node;\n    let observer: MutationObserver;\n    let formElement: HTMLFormElement | null;\n    if (isFormControl(node)) {\n      control = node;\n      control.name = name;\n      return {};\n    } else {\n      // This setTimeout is necessary to guarantee the node has been mounted\n      let created = false;\n      let destroyed = false;\n      setTimeout(() => {\n        if (destroyed) return;\n        const parent = fieldNode.parentNode;\n        if (!parent || !isElement(parent)) return;\n        const foundControl = parent.querySelector(`[name=\"${name}\"]`);\n        if (!foundControl || !isFormControl(foundControl)) {\n          const input = document.createElement('input');\n          input.type = 'hidden';\n          input.name = name;\n          parent.insertBefore(input, node.nextSibling);\n          control = input;\n          created = true;\n        } else {\n          control = foundControl;\n        }\n        setControlValue(control, defaultValue);\n\n        observer = new MutationObserver(mutationCallback);\n        observer.observe(control, observerConfig);\n        formElement = control.closest('form');\n        formElement?.addEventListener('reset', handleReset);\n      });\n      return {\n        destroy() {\n          if (created) control.parentNode?.removeChild(control);\n          destroyed = true;\n          observer?.disconnect();\n          formElement?.removeEventListener('reset', handleReset);\n        },\n      };\n    }\n  }\n\n  function onInput(value: FieldValue) {\n    dispatchEvent(touchOnChange ? 'change' : 'input', value);\n  }\n\n  function onBlur() {\n    dispatchEvent('focusout');\n  }\n  return {\n    field,\n    onInput,\n    onChange: onInput,\n    onBlur,\n  };\n}\n"],"names":[],"mappings":";;AAqBA,MAAM,cAAc,GAAG;IACrB,UAAU,EAAE,IAAI;IAChB,eAAe,EAAE,CAAC,+BAA+B,EAAE,cAAc,CAAC;CACnE,CAAC;SAWc,WAAW,CACzB,YAAkC,EAClC,MAAkC;;IAElC,IAAI,IAAY,CAAC;IACjB,IAAI,YAAwB,CAAC;IAC7B,IAAI,aAAsB,CAAC;IAC3B,IAAI,SAAsB,CAAC;IAC3B,IAAI,OAAoB,CAAC;IACzB,IAAI,WAAkD,CAAC;IAEvD,IAAI,OAAO,YAAY,KAAK,QAAQ,EAAE;QACpC,IAAI,GAAG,YAAY,CAAC;QACpB,YAAY,GAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,YAAY,CAAC;QACpC,aAAa,GAAG,MAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,aAAa,mCAAI,KAAK,CAAC;QAC/C,WAAW,GAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,WAAW,CAAC;KACnC;SAAM;QACL,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC;QACzB,YAAY,GAAG,YAAY,CAAC,YAAY,CAAC;QACzC,aAAa,GAAG,MAAA,YAAY,CAAC,aAAa,mCAAI,KAAK,CAAC;QACpD,WAAW,GAAG,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,WAAW,CAAC;KACzC;IAOD,SAAS,aAAa,CAAC,SAAoB,EAAE,KAAkB;QAC7D,IAAI,CAAC,OAAO;YAAE,OAAO;QACrB,eAAe,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAChC,MAAM,WAAW,GAAG,IAAI,KAAK,CAAC,SAAS,EAAE;YACvC,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;QACH,OAAO,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;KACpC;IAED,SAAS,gBAAgB,CAAC,YAA8B;QACtD,YAAY,CAAC,OAAO,CAAC;YACnB,MAAM,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;YACrD,IAAI,CAAC,OAAO;gBAAE,SAAS,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;;gBACnD,SAAS,CAAC,YAAY,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;YACrD,MAAM,iBAAiB,GAAG,OAAO,CAAC,YAAY,CAC5C,+BAA+B,CAChC,CAAC;YACF,IAAI,CAAC,iBAAiB;gBACpB,SAAS,CAAC,eAAe,CAAC,+BAA+B,CAAC,CAAC;;gBAE3D,SAAS,CAAC,YAAY,CACpB,+BAA+B,EAC/B,iBAAiB,CAClB,CAAC;SACL,CAAC,CAAC;KACJ;IAED,SAAS,WAAW,CAAC,CAAQ;QAC3B,IAAI,CAAC,WAAW;YAAE,OAAO;QACzB,eAAe,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;QACvC,WAAW,CAAC,CAAe,CAAC,CAAC;KAC9B;IAED,SAAS,KAAK,CAAC,IAAiB;QAC9B,SAAS,GAAG,IAAI,CAAC;QACjB,IAAI,QAA0B,CAAC;QAC/B,IAAI,WAAmC,CAAC;QACxC,IAAI,aAAa,CAAC,IAAI,CAAC,EAAE;YACvB,OAAO,GAAG,IAAI,CAAC;YACf,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;YACpB,OAAO,EAAE,CAAC;SACX;aAAM;;YAEL,IAAI,OAAO,GAAG,KAAK,CAAC;YACpB,IAAI,SAAS,GAAG,KAAK,CAAC;YACtB,UAAU,CAAC;gBACT,IAAI,SAAS;oBAAE,OAAO;gBACtB,MAAM,MAAM,GAAG,SAAS,CAAC,UAAU,CAAC;gBACpC,IAAI,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;oBAAE,OAAO;gBAC1C,MAAM,YAAY,GAAG,MAAM,CAAC,aAAa,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC;gBAC9D,IAAI,CAAC,YAAY,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE;oBACjD,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;oBAC9C,KAAK,CAAC,IAAI,GAAG,QAAQ,CAAC;oBACtB,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;oBAClB,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;oBAC7C,OAAO,GAAG,KAAK,CAAC;oBAChB,OAAO,GAAG,IAAI,CAAC;iBAChB;qBAAM;oBACL,OAAO,GAAG,YAAY,CAAC;iBACxB;gBACD,eAAe,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;gBAEvC,QAAQ,GAAG,IAAI,gBAAgB,CAAC,gBAAgB,CAAC,CAAC;gBAClD,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;gBAC1C,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACtC,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;aACrD,CAAC,CAAC;YACH,OAAO;gBACL,OAAO;;oBACL,IAAI,OAAO;wBAAE,MAAA,OAAO,CAAC,UAAU,0CAAE,WAAW,CAAC,OAAO,CAAC,CAAC;oBACtD,SAAS,GAAG,IAAI,CAAC;oBACjB,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,UAAU,EAAE,CAAC;oBACvB,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,mBAAmB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;iBACxD;aACF,CAAC;SACH;KACF;IAED,SAAS,OAAO,CAAC,KAAiB;QAChC,aAAa,CAAC,aAAa,GAAG,QAAQ,GAAG,OAAO,EAAE,KAAK,CAAC,CAAC;KAC1D;IAED,SAAS,MAAM;QACb,aAAa,CAAC,UAAU,CAAC,CAAC;KAC3B;IACD,OAAO;QACL,KAAK;QACL,OAAO;QACP,QAAQ,EAAE,OAAO;QACjB,MAAM;KACP,CAAC;AACJ;;;;"}